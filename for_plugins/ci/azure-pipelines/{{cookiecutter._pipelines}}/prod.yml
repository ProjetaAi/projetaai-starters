trigger:
 branches:
   include:
     - main
     - master

stages:
  - stage: Validate
    jobs:
      - job: LintNTest
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '{{cookiecutter.__python_version}}'
              addToPath: true
              architecture: 'x64'
          - script: |
              pip install pre-commit
              pre-commit run --all-files
            displayName: 'Lint code'
          - script: |
              pip install -e .[test]
              pytest
            displayName: 'Run tests'
  - stage: Deploy
    jobs:
      - job: Update
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '{{cookiecutter.__python_version}}'
              addToPath: true
              architecture: 'x64'
          - bash: |
              msg='$(Build.SourceVersionMessage)'
              tag='[ratify]'
                
              if [[ "$msg" == *"$tag"* ]]; then
                echo '##vso[task.setvariable variable=ratify;]true'
              else
                echo '##vso[task.setvariable variable=ratify;]false'
              fi
            displayName: Check for ratify
          - script: |
              pip install -r ./src/requirements.txt
            displayName: Install requirements
          - bash: |
              # TODO: Add the code for immediate update and execution of the 
              # production script
            displayName: 'Ratify production'
            condition: eq(variables['ratify'], 'true')
          - checkout: self
            persistCredentials: true
          - bash: |
              find ./conf -type f -exec sed -i 's/cached:\s*true/cached: false/ig' {} +
              git config --global user.email "projetaaimlops@gmail.com"
              git config --global user.name "ProjetaAi"
              git add .
              git commit -m "Correcting cached status [skip ci]"
              git push origin HEAD:$(Build.SourceBranchName)
            displayName: 'Recommit with false cached'
          - bash: |
              # TODO: Add the code for production update here
            displayName: Update production